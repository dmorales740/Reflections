Lesson 2

1. What happens when you initialize a repository? Why do you need to do it?
Git creates a meta data folder in the directory that begins to track the files and makes them available for commits.

2. . How is the staging area different from the working directory and the repository? What value do you think it offers?
Files from the working directory are placed in the staging area before they are commited to a repository. I allows us to preview the repository before it is created.

2. How can you use the staging area to make sure you have one commit per logical change? 
After adding files to the staging area, we can compare the files in the working directory with the files currently in the staging area, as well as compare the files in the staging area with the last commit.

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help? 
Sometimes commits are closely related and using branches helps to organize them together.

5. How do the diagrams help you visualize the branch structure? 
The diagrams hwlp me see which commit will be listed with git log and also wich branch belong to which master branch.

6. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
After merging two branches, the new branche becomes the master branch and it has two parents.

7. What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
In automatic merging, git can mess up the code if merges the wrong change. however, it is faster. With manual merge, the user makes sure the code is correctly merged, but this can be troublesome.

8. 