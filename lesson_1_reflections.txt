Questions:

1.	How did viewing a diff between two versions of a file help you see the bug that was introduced?
It was easier to spot the differences by viewer a small section of the file, rather than having
to scan the whole document.

2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
By having easy access to the history of a file, we can find those differences that we like or dislike and change them 
accordingly in a small ammount of time.

3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
Pros
- You avoid having too much clutter saved
- You can write a comment explaining what the change was
Cons
- We can forget to commit
- We commit too soon or too late

4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
GIT intents to save the status of those files that are interrelated and need each other to work properly.

5. How can you use the commands git log and git diff to view the history of files? 
With "git log" we can see a list in cronological order of all the commits and their ids, then we can copy two different ids and compare them using "git diff"
   
6. How might using version control make you more confident to make changes that could break something?
If an error occurs after making a change, it can be easily spotted and fixed.

7. Now that you have your workspace set up, what do you want to try using Git for?
Version control

8. 






















